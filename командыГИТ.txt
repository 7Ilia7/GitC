Команды в Git Bash консоли начальные.
git clone https
git status Проверка стаута файлов загружен не загружен
git add Имя файла -показать файл гиту 
git add . показать все файлы гиту 
git commit 
git push
clear — Очистить консоль
git pull - обновить существубщий репозиторий 

Если не коммитит то прописать 
git config --global user.name "Имя репозиториякуда комитим"
git config --global user.email "@на котором аккаунт гита"

Навигация
pwd — Показать текущий каталог
ls - Показать файлы в данной папке, кроме скрытых
ls -f — Показать файлы в данной папке, включая и скрытые
cd c:/ — Перейти в конкретный каталог
cd - — Вернуться назад
cd .. — Выйти на 1 уровень вверх
cd ../.. — Выйти на 2 уровня вверх
vim - зайти в файл(для изменения)	
q! - выйти из файла без сохранения
grep -  поиск по той дерриктории в которой ты находишься
git log --oneline - Пока мы не сделали rebase посмотрим log. У нас тут только коммиты из ветки

Создание каталогов
mkdir — Создать папку
cd !$ — Перейти в только что созданную папку
mkdir -p {app1,app2} — Создать сразу несколько папок
mkdir -p app/{css,js} — Создать сразу несколько вложенных папок

Создание файлов
touch index.html — Создать файл index.html
touch app/{css/main.css,js/main.js,index.html} — Создать сразу несколько файлов, никаких лишних пробелов быть не должно
cp - копирование файла
mv - перемещение файла в системе (mv f_1/j_test1.json fff_1/j_test1.json)
cat > tt2.txt создание и запись файла сразу
cat ttn1.txt >> ttn3.txt дописать 
cat ttn1.txt > ttn3.txt перезапись

Удаление файлов
touch — позволяет создавать файлы
rm test — Удалить пустую папку test
rm -r test — Удалить папку test с файлами внутри неё

Перемещение файлов
mv app1/*.* app2 — Переместить все файлы из папки app1 в папку app2

vim test1 - запись в файл (открытие текстового редактора)(i insert) после i  мы имеем возмоность что то писать

